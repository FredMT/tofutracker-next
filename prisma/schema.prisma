generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema", "relationJoins"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_POOLING")
  schemas   = ["public", "users"]
}

model Account {
  id           Int         @id @default(autoincrement())
  user_id      Int         @unique
  account_type AccountType
  github_id    Int?        @unique
  google_id    String?     @unique
  password     String?
  salt         String?
  user         user        @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
  @@schema("users")
}

model MagicLink {
  id               Int      @id @default(autoincrement())
  email            String   @unique
  token            String?
  token_expires_at DateTime

  @@index([email])
  @@schema("users")
}

model Profile {
  id         Int         @id @default(autoincrement())
  user_id    Int         @unique
  username   String?
  image_id   String?
  image      String?
  bio        String      @default("")
  created_at DateTime
  user       user        @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_media UserMedia[] @relation("UserMediaToProfile")

  @@index([user_id])
  @@schema("users")
}

model ResetToken {
  id               Int      @id @default(autoincrement())
  user_id          Int      @unique
  token            String?
  token_expires_at DateTime
  user             user     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@schema("users")
}

model Session {
  id        String   @id
  userId    Int
  expiresAt DateTime
  user      user     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@schema("users")
}

model user {
  id               Int               @id @default(autoincrement())
  email            String            @unique
  email_verified   DateTime?
  Account          Account?
  CheckIn          CheckIn[]
  Comment          Comment[]
  CommentLike      CommentLike[]
  Profile          Profile?
  ResetToken       ResetToken?
  Session          Session[]
  user_media       UserMedia[]       @relation("UserMediaToProfile")
  UserMediaLike    UserMediaLike[]
  VerifyEmailToken VerifyEmailToken?

  @@index([email])
  @@index([id])
  @@map("user")
  @@schema("users")
}

model VerifyEmailToken {
  id               Int      @id @default(autoincrement())
  user_id          Int      @unique
  token            String?
  token_expires_at DateTime
  User             user     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@schema("users")
}

model UserMedia {
  id                      Int             @id @default(autoincrement())
  user_id                 Int
  media_id                Int
  last_watched_episode_id Int?
  watch_status            WatchStatus
  rating                  Float?          @db.Real
  previous_watch_status   WatchStatus?
  created_at              DateTime        @default(now()) @db.Timestamptz(3)
  CheckIn                 CheckIn[]
  Comment                 Comment[]
  user_episodes           UserEpisode[]
  user                    user            @relation("UserMediaToProfile", fields: [user_id], references: [id], map: "UserMedia_user_id_fkey1")
  profile                 Profile         @relation("UserMediaToProfile", fields: [user_id], references: [user_id], map: "UserMedia_user_id_fkey2")
  UserMediaLike           UserMediaLike[]
  user_seasons            UserSeason[]
  watch_history           WatchHistory[]

  @@unique([user_id, media_id])
  @@index([user_id])
  @@index([media_id])
  @@schema("users")
}

model UserSeason {
  id                      Int          @id @default(autoincrement())
  user_media_id           Int
  season_id               Int
  last_watched_episode_id Int?
  watch_status            WatchStatus?
  rating                  Float?       @db.Real
  user_media              UserMedia    @relation(fields: [user_media_id], references: [id], onDelete: Cascade)

  @@unique([user_media_id, season_id])
  @@schema("users")
}

model UserEpisode {
  id            Int       @id @default(autoincrement())
  user_media_id Int
  episode_id    Int
  rating        Float?    @db.Real
  user_media    UserMedia @relation(fields: [user_media_id], references: [id], onDelete: Cascade)

  @@unique([user_media_id, episode_id])
  @@schema("users")
}

model WatchHistory {
  id            Int            @id @default(autoincrement())
  user_media_id Int
  episode_id    Int?
  season_id     Int?
  watched_at    DateTime       @default(now()) @db.Timestamptz(3)
  media_type    WatchMediaType
  user_media    UserMedia      @relation(fields: [user_media_id], references: [id], onDelete: Cascade)

  @@index([user_media_id])
  @@index([episode_id])
  @@index([season_id])
  @@index([watched_at])
  @@schema("users")
}

model CheckIn {
  id                    Int       @id @default(autoincrement())
  end_time              DateTime
  media_id              Int
  previous_watch_status String?
  start_time            DateTime  @default(now())
  user_id               Int
  media_type            MediaType
  user_media_id         Int
  user                  user      @relation(fields: [user_id], references: [id])
  user_media            UserMedia @relation(fields: [user_media_id], references: [id], onDelete: Cascade)

  @@unique([user_id, media_id])
  @@index([end_time])
  @@index([media_id])
  @@schema("users")
}

model UserMediaLike {
  id            Int       @id @default(autoincrement())
  user_id       Int
  user_media_id Int
  created_at    DateTime  @default(now()) @db.Timestamptz(3)
  user          user      @relation(fields: [user_id], references: [id], onDelete: Cascade)
  UserMedia     UserMedia @relation(fields: [user_media_id], references: [id], onDelete: Cascade)

  @@unique([user_id, user_media_id])
  @@index([user_id])
  @@index([user_media_id])
  @@schema("users")
}

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model TrendingItem {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model public__prisma_migrations {
// @@map("_prisma_migrations")
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model anidb_anime {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model anidb_characters {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model anidb_creators {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model anidb_external_links {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model anidb_mapping {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model anidb_relations {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model anidb_similar {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model anidb_tvdb_mapping {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model anime {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model anime_episodes {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model anime_seasons {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model anime_series_grouping {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model cast {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model content_ratings {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model crew {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model episodes {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model external_ids {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model genres {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model images {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model item_created_by {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model item_genres {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model item_keywords {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model item_networks {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model item_production_companies {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model item_production_countries {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model item_spoken_languages {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model item_watch_providers {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model keywords {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model media {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model networks {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model origin_country {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model persons {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model production_companies {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model production_countries {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model seasons {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model spoken_languages {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model temp_ids {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model translations {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model tvdb_episodes {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model tvdb_series {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model videos {
// @@schema("public")
// }

/// We could not retrieve columns for the underlying table. Either it has none or you are missing rights to see them. Please check your privileges.
// model watch_providers {
// @@schema("public")
// }

model Comment {
  id            Int           @id @default(autoincrement())
  content       String?
  created_at    DateTime      @default(now())
  updated_at    DateTime
  user_id       Int?
  user_media_id Int
  parent_id     Int?
  deleted_at    DateTime?
  Comment       Comment?      @relation("CommentToComment", fields: [parent_id], references: [id], onDelete: Cascade)
  other_Comment Comment[]     @relation("CommentToComment")
  user          user?         @relation(fields: [user_id], references: [id])
  UserMedia     UserMedia     @relation(fields: [user_media_id], references: [id], onDelete: Cascade)
  CommentLike   CommentLike[]

  @@index([parent_id])
  @@index([user_id])
  @@index([user_media_id])
  @@schema("users")
}

model CommentLike {
  id         Int      @id @default(autoincrement())
  user_id    Int
  comment_id Int
  created_at DateTime @default(now())
  Comment    Comment  @relation(fields: [comment_id], references: [id], onDelete: Cascade)
  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([user_id, comment_id])
  @@index([comment_id])
  @@index([user_id])
  @@schema("users")
}

enum ImageType {
  BACKDROP
  LOGO
  POSTER
  UNKNOWN

  @@schema("public")
}

enum MediaType {
  MOVIE
  TV

  @@schema("public")
}

enum AccountType {
  email
  google
  github

  @@schema("users")
}

enum WatchStatus {
  PLANNING
  WATCHING
  COMPLETED
  DROPPED
  REWATCHING
  ONHOLD

  @@schema("users")
}

enum WatchMediaType {
  movie
  show
  season
  episode

  @@schema("users")
}
